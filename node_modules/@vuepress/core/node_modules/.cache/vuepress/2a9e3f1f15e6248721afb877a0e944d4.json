{"remainingRequest":"/home/yuanyuan-g/blog/node_modules/babel-loader/lib/index.js??ref--3-1!/home/yuanyuan-g/blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/yuanyuan-g/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yuanyuan-g/blog/node_modules/@vuepress-reco/vuepress-plugin-bgm-player/bin/BgMusic.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/yuanyuan-g/blog/node_modules/@vuepress-reco/vuepress-plugin-bgm-player/bin/BgMusic.vue","mtime":499162500000},{"path":"/home/yuanyuan-g/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yuanyuan-g/blog/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/yuanyuan-g/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yuanyuan-g/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}