{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{366:function(e,a,s){\"use strict\";s.r(a);var t=s(0),_=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"ansible-部署ceph集群\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ansible-部署ceph集群\"}},[e._v(\"#\")]),e._v(\" Ansible 部署ceph集群\")]),e._v(\" \"),s(\"p\",[e._v(\"2020/3/23 10:14:57\")]),e._v(\" \"),s(\"hr\"),e._v(\" \"),s(\"h2\",{attrs:{id:\"_1-安装\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-安装\"}},[e._v(\"#\")]),e._v(\" 1.安装\")]),e._v(\" \"),s(\"h3\",{attrs:{id:\"github\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#github\"}},[e._v(\"#\")]),e._v(\" GitHub\")]),e._v(\" \"),s(\"h4\",{attrs:{id:\"克隆存储库：\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#克隆存储库：\"}},[e._v(\"#\")]),e._v(\" 克隆存储库：\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[e._v(\"$ git clone https://github.com/ceph/ceph-ansible.git\\n$ git checkout $branch\\n\")])])]),s(\"h4\",{attrs:{id:\"barnch说明：\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#barnch说明：\"}},[e._v(\"#\")]),e._v(\" barnch说明：\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"stable-3.0支持Ceph版本jewel和luminous。该分支需要Ansible版本2.4。\")]),e._v(\" \"),s(\"li\",[e._v(\"stable-3.1支持Ceph版本luminous和mimic。该分支需要Ansible版本2.4。\")]),e._v(\" \"),s(\"li\",[e._v(\"stable-3.2支持Ceph版本luminous和mimic。该分支需要Ansible版本2.6。\")]),e._v(\" \"),s(\"li\",[e._v(\"stable-4.0支持Ceph版本nautilus。该分支需要Ansible版本2.8。\")]),e._v(\" \"),s(\"li\",[e._v(\"master支持Ceph的master分支。该分支需要Ansible版本2.8。\")])]),e._v(\" \"),s(\"h4\",{attrs:{id:\"安装ansible和依赖-如果ansible存在则可注释掉ansible的安装-：\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#安装ansible和依赖-如果ansible存在则可注释掉ansible的安装-：\"}},[e._v(\"#\")]),e._v(\" 安装ansible和依赖(如果ansible存在则可注释掉ansible的安装)：\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[e._v(\"$ pip install -r requirements.txt\\n\")])])]),s(\"h2\",{attrs:{id:\"_2-配置与使用\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-配置与使用\"}},[e._v(\"#\")]),e._v(\" 2.配置与使用\")]),e._v(\" \"),s(\"h3\",{attrs:{id:\"inventory-文件：\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#inventory-文件：\"}},[e._v(\"#\")]),e._v(\" inventory 文件：\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[e._v(\"[mons]\\nmon1 ansible_host=10.142.96.71\\nmon2 ansible_host=10.142.96.72\\nmon3 ansible_host=10.142.96.73\\n[mgrs]\\nmgr1 ansible_host=10.142.96.71\\nmgr2 ansible_host=10.142.96.72\\nmgr3 ansible_host=10.142.96.73\\n[osds]\\nosd1 ansible_host=10.142.96.71\\nosd2 ansible_host=10.142.96.72\\nosd3 ansible_host=10.142.96.73\\nosd4 ansible_host=10.142.96.135\\nosd5 ansible_host=10.142.96.136\\n\")])])]),s(\"h3\",{attrs:{id:\"playbook剧本文件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#playbook剧本文件\"}},[e._v(\"#\")]),e._v(\" playbook剧本文件\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"重命名示例剧本： mv site.yml.sample site.yml\")]),e._v(\" \"),s(\"li\",[e._v(\"根据集群的需要修改剧本\")])]),e._v(\" \"),s(\"h3\",{attrs:{id:\"配置验证\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#配置验证\"}},[e._v(\"#\")]),e._v(\" 配置验证\")]),e._v(\" \"),s(\"p\",[e._v(\"ceph-ansible项目通过ceph-validate角色提供了配置验证。\")]),e._v(\" \"),s(\"p\",[e._v(\"该ceph-validate角色当前支持以下osd方案的正确配置验证：\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"collocated\")]),e._v(\" \"),s(\"li\",[e._v(\"non-collocated\")]),e._v(\" \"),s(\"li\",[e._v(\"lvm\")])]),e._v(\" \"),s(\"p\",[e._v(\"以下安装选项也由ceph-validate角色验证:\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"ceph_origin set to distro\")]),e._v(\" \"),s(\"li\",[e._v(\"ceph_origin set to repository\")]),e._v(\" \"),s(\"li\",[e._v(\"ceph_origin set to local\")]),e._v(\" \"),s(\"li\",[e._v(\"ceph_repository set to rhcs\")]),e._v(\" \"),s(\"li\",[e._v(\"ceph_repository set to dev\")]),e._v(\" \"),s(\"li\",[e._v(\"ceph_repository set to community\")])]),e._v(\" \"),s(\"h3\",{attrs:{id:\"安装方法\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#安装方法\"}},[e._v(\"#\")]),e._v(\" 安装方法\")]),e._v(\" \"),s(\"p\",[e._v(\"以下是通过不同渠道安装Ceph的所有可用选项。\")]),e._v(\" \"),s(\"p\",[e._v(\"主要支持三种安装方法，全部由ceph_origin变量管理：\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"repository：意味着您将通过新的存储库安装Ceph。后来以下之间选择community，rhcs或dev。这些选项将通过ceph_repository变量公开。\")]),e._v(\" \"),s(\"li\",[e._v(\"distro：表示不会添加单独的repo文件，并且您将获得Linux发行版中包含的Ceph任何版本。\")]),e._v(\" \"),s(\"li\",[e._v(\"local：表示将从本地计算机复制Ceph二进制文件（未经良好测试，使用后果自负）\")])]),e._v(\" \"),s(\"h4\",{attrs:{id:\"来源：repository\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#来源：repository\"}},[e._v(\"#\")]),e._v(\" 来源：Repository\")]),e._v(\" \"),s(\"p\",[e._v(\"如果ceph_origin设置为repository，您现在可以在由ceph_repository选项控制的两个存储库之间进行选择：\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"community：从官方社区Ceph仓库http://download.ceph.com获取程序包\")]),e._v(\" \"),s(\"li\",[e._v(\"rhcs：表示您是Red Hat客户，此外，您还必须通过ceph_repository_type（cdn或iso）选择存储库类型\")]),e._v(\" \"),s(\"li\",[e._v(\"dev：从基于gitbuilder的软件包系统萨满中获取软件包\")]),e._v(\" \"),s(\"li\",[e._v(\"uca：从Ubuntu Cloud Archive获取软件包\")]),e._v(\" \"),s(\"li\",[e._v(\"custom：从特定存储库获取软件包\")])]),e._v(\" \"),s(\"h4\",{attrs:{id:\"社区存储库\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#社区存储库\"}},[e._v(\"#\")]),e._v(\" 社区存储库\")]),e._v(\" \"),s(\"p\",[e._v(\"如果ceph_repository设置为community，则默认情况下将从http://download.ceph.com安装您的软件包，可以通过调整进行更改ceph_mirror。最后一步是选择要安装的Ceph版本，为此您必须进行相应设置ceph_stable_release。例如，。ceph_stable_release: luminous\")]),e._v(\" \"),s(\"h4\",{attrs:{id:\"rhcs库\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#rhcs库\"}},[e._v(\"#\")]),e._v(\" RHCS库\")]),e._v(\" \"),s(\"p\",[e._v(\"RHCS是来自Red Hat（Ceph的企业版）的Red Hat Ceph Storage产品。如果ceph_repository设置为rhcs，将从Red Hat来源安装软件包。\")]),e._v(\" \"),s(\"p\",[e._v(\"此外，您将必须通过选择存储库类型ceph_repository_type，可以是cdn或iso。要选择特定版本的RHCS，您可以相应地设置ceph_rhcs_version变量，例如：。ceph_rhcs_version: 2\")]),e._v(\" \"),s(\"h4\",{attrs:{id:\"uca资料库\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#uca资料库\"}},[e._v(\"#\")]),e._v(\" UCA资料库\")]),e._v(\" \"),s(\"p\",[e._v(\"如果ceph_repository将设置为uca，则默认情况下将从http://ubuntu-cloud.archive.canonical.com/ubuntu安装您要安装的软件包，可以通过进行调整来进行更改ceph_stable_repo_uca。您还可以通过调整来确定Ceph软件包应来自哪个OpenStack版本ceph_stable_openstack_release_uca。例如，。ceph_stable_openstack_release_uca: queens\")]),e._v(\" \"),s(\"h4\",{attrs:{id:\"开发仓库\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#开发仓库\"}},[e._v(\"#\")]),e._v(\" 开发仓库\")]),e._v(\" \"),s(\"p\",[e._v(\"如果ceph_repository设置为dev，则默认情况下将从https://shaman.ceph.com/安装您的软件包，无法进行调整。您显然可以借助来决定要安装哪个分支 ceph_dev_branch（默认为'master'）。此外，您可以使用来指定SHA1 ceph_dev_sha1，默认为“最新”（与最新构建的一样）。\")]),e._v(\" \"),s(\"h4\",{attrs:{id:\"自定义存储库\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#自定义存储库\"}},[e._v(\"#\")]),e._v(\" 自定义存储库\")]),e._v(\" \"),s(\"p\",[e._v(\"如果ceph_repository设置为custom，则默认情况下将从所需的存储库安装软件包。该存储库指定了ceph_custom_repo，例如：。ceph_custom_repo: https://server.domain.com/ceph-custom-repo\")]),e._v(\" \"),s(\"h3\",{attrs:{id:\"来源：发行版\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#来源：发行版\"}},[e._v(\"#\")]),e._v(\" 来源：发行版\")]),e._v(\" \"),s(\"p\",[e._v(\"如果ceph_origin设置为distro，则不会添加单独的回购文件，并且您将获得Linux发行版中包含的Ceph版本。\")]),e._v(\" \"),s(\"h3\",{attrs:{id:\"来源：本地\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#来源：本地\"}},[e._v(\"#\")]),e._v(\" 来源：本地\")]),e._v(\" \"),s(\"p\",[e._v(\"如果ceph_origin设置为local，则将从本地计算机复制ceph二进制文件（未经良好测试，使用后果自负）\")]),e._v(\" \"),s(\"h2\",{attrs:{id:\"_3-配置\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-配置\"}},[e._v(\"#\")]),e._v(\" 3.配置\")]),e._v(\" \"),s(\"p\",[e._v(\"您的Ceph集群的配置将通过使用ceph-ansible提供的ansible变量进行设置。所有这些选项及其默认值都在项目group_vars/根目录下的目录中定义ceph-ansible。Ansible将在group_vars/与您的清单文件或剧本相关的目录中使用配置。在group_vars/目录内部，有许多示例Ansible配置文件，它们通过文件名与每个Ceph守护程序组相关。例如，osds.yml.sample包含OSD守护程序的所有默认配置。该all.yml.sample 文件是一个特殊group_vars文件，适用于群集中的所有主机。\")]),e._v(\" \"),s(\"p\",[e._v(\"在最基本的级别上，您必须告诉ceph-ansible您要安装的Ceph版本，安装方法，群集网络设置以及如何配置OSD。要开始配置，请重命名group_vars/您要使用的每个文件，以使其不包含.sample 在文件名末尾，请取消注释要更改的选项并提供您自己的值。\")]),e._v(\" \"),s(\"p\",[e._v(\"octopus使用lvm batch方法部署Ceph 上游版本的示例配置如下所示group_vars/all.yml：\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[e._v(\"ceph_origin: repository\\nceph_repository: community\\nceph_stable_release: octopus\\npublic_network: \\\"192.168.3.0/24\\\"\\ncluster_network: \\\"192.168.4.0/24\\\"\\nmonitor_interface: eth1\\ndevices:\\n  - '/dev/sda'\\n  - '/dev/sdb'\\n\")])])]),s(\"p\",[e._v(\"在所有安装中都需要更改以下配置选项，但是可能还有其他必需的选项，具体取决于您的OSD方案选择或群集的其他方面。\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"ceph_origin\")]),e._v(\" \"),s(\"li\",[e._v(\"ceph_stable_release\")]),e._v(\" \"),s(\"li\",[e._v(\"public_network\")]),e._v(\" \"),s(\"li\",[e._v(\"monitor_interface 要么 monitor_address\")])]),e._v(\" \"),s(\"p\",[e._v(\"部署RGW实例时，需要设置radosgw_interface或radosgw_addressconfig选项。\")]),e._v(\" \"),s(\"h3\",{attrs:{id:\"ceph-conf配置文件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ceph-conf配置文件\"}},[e._v(\"#\")]),e._v(\" ceph.conf配置文件\")]),e._v(\" \"),s(\"p\",[e._v(\"支持的定义您的方法ceph.conf是使用ceph_conf_overrides变量。这使您可以使用INI格式指定配置选项。此变量可用于覆盖已经在中定义的部分ceph.conf（请参阅：）roles/ceph-config/templates/ceph.conf.j2或提供新的配置选项。\")]),e._v(\" \"),s(\"h4\",{attrs:{id:\"ceph-conf支持以下各节：\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ceph-conf支持以下各节：\"}},[e._v(\"#\")]),e._v(\" ceph.conf支持以下各节：\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"[global]\")]),e._v(\" \"),s(\"li\",[e._v(\"[mon]\")]),e._v(\" \"),s(\"li\",[e._v(\"[osd]\")]),e._v(\" \"),s(\"li\",[e._v(\"[mds]\")]),e._v(\" \"),s(\"li\",[e._v(\"[client.rgw.{instance_name}]\")])]),e._v(\" \"),s(\"p\",[e._v(\"一个例子：\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[e._v(\"ceph_conf_overrides:\\n   global:\\n foo: 1234\\n bar: 5678\\n   osd:\\n osd_mkfs_type: ext4\\n\")])])]),s(\"p\",[e._v(\"以下各节中提供了有关配置每种Ceph守护程序类型的完整文档。\")]),e._v(\" \"),s(\"h4\",{attrs:{id:\"osd配置\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#osd配置\"}},[e._v(\"#\")]),e._v(\" OSD配置\")]),e._v(\" \"),s(\"p\",[e._v(\"过去通过选择OSD方案并提供该方案所需的配置来设置OSD配置。从稳定版4.0中的nautilus开始，唯一可用的方案是lvm。\")]),e._v(\" \"),s(\"h3\",{attrs:{id:\"lvm\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#lvm\"}},[e._v(\"#\")]),e._v(\" LVM\")]),e._v(\" \"),s(\"p\",[e._v(\"这个OSD场景使用Ceph -volume来创建OSD，主要使用LVM，并且只有当Ceph版本是luminous或者更新的时候才可用。它是自动启用的。\")]),e._v(\" \"),s(\"p\",[e._v(\"其他(可选)支持的设置:\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"osd_objectstore:为OSD设置Ceph objectstore。可用的选项有filestore或bluestore。你只能选择bluestore与Ceph发布是luminous或更新。如果未设置，则默认为bluestore。\")]),e._v(\" \"),s(\"li\",[e._v(\"dmcrypt:使用dmcrypt在OSDs上启用Ceph的加密。\")]),e._v(\" \"),s(\"li\",[e._v(\"如果未设置，则默认为false。\")]),e._v(\" \"),s(\"li\",[e._v(\"osds_per_device:为每个设备提供超过1个OSD(未设置时的默认值)。\")])]),e._v(\" \"),s(\"h3\",{attrs:{id:\"简单配置\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#简单配置\"}},[e._v(\"#\")]),e._v(\" 简单配置\")]),e._v(\" \"),s(\"p\",[e._v(\"使用这种方法，关于设备如何配置以提供OSD的大部分决策都是由Ceph工具做出的(本例中是ceph-volume lvm批处理)。在给定设备输入的情况下，几乎没有修改OSD组成方式的空间。\\n要使用此配置，必须使用将用于供应OSDs的原始设备路径填充设备选项。\")]),e._v(\" \"),s(\"blockquote\",[s(\"p\",[e._v(\"注意:\\n原始设备必须是“干净的”，没有gpt分区表或逻辑卷。\")])]),e._v(\" \"),s(\"p\",[e._v(\"例如，对于具有/dev/sda和/dev/sdb的节点，其配置为:\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[e._v(\"devices:\\n  - /dev/sda\\n  - /dev/sdb\\n\")])])]),s(\"p\",[e._v(\"在上面的例子中，如果两个设备都是旋转驱动器，就会创建两个osd，每个osd都有自己的配置日志。\")]),e._v(\" \"),s(\"p\",[e._v(\"其他供应策略是可能的，通过混合纺纱和固态设备，例如:\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[e._v(\"devices:\\n  - /dev/sda\\n  - /dev/sdb\\n  - /dev/nvme0n1\\n\")])])]),s(\"p\",[e._v(\"与最初的示例类似，这将最终产生两个osd，但是数据将放置在较慢的旋转驱动器(/dev/sda，和/dev/sdb)上，而日志将放置在较快的固态设备/dev/nvme0n1上ceph-volume工具在“batch”子命令部分详细描述了这一点\")]),e._v(\" \"),s(\"p\",[e._v(\"这个选项也可以与osd_auto_discovery一起使用，这意味着您不需要直接填充设备，ansible找到的任何适当的设备都将被使用。\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[e._v(\"osd_auto_discovery: true\\n\")])])]),s(\"p\",[e._v(\"其他(可选)支持的设置:\")]),e._v(\" \"),s(\"p\",[e._v('crush_device_class:为使用此方法创建的所有osd设置挤压设备类(使用简单配置方法不可能有每个osd挤压设备类)。值必须是字符串，如crush_device_class: \"ssd\"')]),e._v(\" \"),s(\"h3\",{attrs:{id:\"高级配置\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#高级配置\"}},[e._v(\"#\")]),e._v(\" 高级配置\")]),e._v(\" \"),s(\"p\",[e._v(\"当在设置设备时需要更细粒度的控制以及如何安排它们以提供OSD时，这种配置非常有用。它需要现有的卷组和逻辑卷设置(ceph-volume不会创建这些)。\\n要使用此配置，必须使用逻辑卷和卷组填充lvm_volumes选项。此外，绝对路径的分区可以用于journal, block.db和block.wal\")]),e._v(\" \"),s(\"blockquote\",[s(\"p\",[e._v(\"注意:\\n此配置使用ceph-volume lvm创建来供应OSDs\")])]),e._v(\" \"),s(\"h3\",{attrs:{id:\"支持的lvm-volumes配置设置：\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#支持的lvm-volumes配置设置：\"}},[e._v(\"#\")]),e._v(\" 支持的lvm_volumes配置设置：\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"data：逻辑卷名称或原始设备的完整路径（将使用原始设备的100％创建LV）\")]),e._v(\" \"),s(\"li\",[e._v(\"data_vg：卷组名，如果是逻辑卷则为必需data。\")]),e._v(\" \"),s(\"li\",[e._v(\"crush_device_class：生成的OSD的CRUSH设备类名称，允许设置为每个OSD设置设备类，这与crush_device_class 为所有OSD 设置设备类的全局设置不同。\")])]),e._v(\" \"),s(\"blockquote\",[s(\"p\",[e._v(\"注意：如果要crush_device_class在使用时为OSD 设置OSD，则devices必须使用全局crush_device_class 选项进行设置，如上所示。devices像for那样使用时，无法为每个OSD定义特定的CRUSH设备类lvm_volumes。\")])]),e._v(\" \"),s(\"h4\",{attrs:{id:\"filestore-对象库变量：\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#filestore-对象库变量：\"}},[e._v(\"#\")]),e._v(\" filestore 对象库变量：\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"journal：逻辑卷名或分区的完整路径。\")]),e._v(\" \"),s(\"li\",[e._v(\"journal_vg：卷组名，如果是逻辑卷则为必需journal。\")])]),e._v(\" \"),s(\"blockquote\",[s(\"p\",[e._v(\"警告:\\n每个条目必须唯一，不允许重复值\")])]),e._v(\" \"),s(\"h4\",{attrs:{id:\"bluestore-对象库变量：\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#bluestore-对象库变量：\"}},[e._v(\"#\")]),e._v(\" bluestore 对象库变量：\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"db：逻辑卷名或分区的完整路径。\")]),e._v(\" \"),s(\"li\",[e._v(\"db_vg：卷组名，如果是逻辑卷则为必需db。\")]),e._v(\" \"),s(\"li\",[e._v(\"wal：逻辑卷名或分区的完整路径。\")]),e._v(\" \"),s(\"li\",[e._v(\"wal_vg：卷组名，如果是逻辑卷则为必需wal。\")])]),e._v(\" \"),s(\"blockquote\",[s(\"p\",[e._v(\"注意\\n这些bluestore变量是可选的优化。Bluestore的 db，wal只会从速度更快的设备中受益。可以使用单个原始设备创建一个蓝存储OSD。\")])]),e._v(\" \"),s(\"blockquote\",[s(\"p\",[e._v(\"警告\\n每个条目必须唯一，不允许重复值\")])]),e._v(\" \"),s(\"h4\",{attrs:{id:\"bluestore-使用原始设备的示例：\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#bluestore-使用原始设备的示例：\"}},[e._v(\"#\")]),e._v(\" bluestore 使用原始设备的示例：\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[e._v(\"osd_objectstore: bluestore\\nlvm_volumes:\\n  - data: /dev/sda\\n  - data: /dev/sdb\\n\")])])]),s(\"blockquote\",[s(\"p\",[e._v(\"注意\\n在这种情况下，将使用100％的设备创建卷组和逻辑卷。\")])]),e._v(\" \"),s(\"h4\",{attrs:{id:\"bluestore-逻辑卷示例：\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#bluestore-逻辑卷示例：\"}},[e._v(\"#\")]),e._v(\" bluestore 逻辑卷示例：\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[e._v(\"osd_objectstore: bluestore\\nlvm_volumes:\\n  - data: data-lv1\\n\\tdata_vg: data-vg1\\n  - data: data-lv2\\n\\tdata_vg: data-vg2\\n\")])])]),s(\"blockquote\",[s(\"p\",[e._v(\"注意\\n卷组和逻辑卷必须存在。\")])]),e._v(\" \"),s(\"h4\",{attrs:{id:\"bluestore定义wal和db逻辑卷示例：\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#bluestore定义wal和db逻辑卷示例：\"}},[e._v(\"#\")]),e._v(\" bluestore定义wal和db逻辑卷示例：\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[e._v(\"osd_objectstore: bluestore\\nlvm_volumes:\\n  - data: data-lv1\\n\\tdata_vg: data-vg1\\n\\tdb: db-lv1\\n\\tdb_vg: db-vg1\\n\\twal: wal-lv1\\n\\twal_vg: wal-vg1\\n  - data: data-lv2\\n\\tdata_vg: data-vg2\\n\\tdb: db-lv2\\n\\tdb_vg: db-vg2\\n\\twal: wal-lv2\\n\\twal_vg: wal-vg2\\n\")])])]),s(\"blockquote\",[s(\"p\",[e._v(\"注意\\n卷组和逻辑卷必须存在。\")])]),e._v(\" \"),s(\"h4\",{attrs:{id:\"filestore-逻辑卷示例：\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#filestore-逻辑卷示例：\"}},[e._v(\"#\")]),e._v(\" filestore 逻辑卷示例：\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[e._v(\"osd_objectstore: filestore\\nlvm_volumes:\\n  - data: data-lv1\\n\\tdata_vg: data-vg1\\n\\tjournal: journal-lv1\\n\\tjournal_vg: journal-vg1\\n  - data: data-lv2\\n\\tdata_vg: data-vg2\\n\\tjournal: journal-lv2\\n\\tjournal_vg: journal-vg2\\n\")])])]),s(\"blockquote\",[s(\"p\",[e._v(\"注意\\n卷组和逻辑卷必须存在。\")])])])}),[],!1,null,null,null);a.default=_.exports}}]);","extractedComments":[]}